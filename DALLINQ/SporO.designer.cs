#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALLINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SporO")]
	public partial class SporODataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEtkinlik(Etkinlik instance);
    partial void UpdateEtkinlik(Etkinlik instance);
    partial void DeleteEtkinlik(Etkinlik instance);
    partial void InsertEtkinlikTipi(EtkinlikTipi instance);
    partial void UpdateEtkinlikTipi(EtkinlikTipi instance);
    partial void DeleteEtkinlikTipi(EtkinlikTipi instance);
    partial void InsertHataLoglari(HataLoglari instance);
    partial void UpdateHataLoglari(HataLoglari instance);
    partial void DeleteHataLoglari(HataLoglari instance);
    partial void InsertIlceler(Ilceler instance);
    partial void UpdateIlceler(Ilceler instance);
    partial void DeleteIlceler(Ilceler instance);
    partial void InsertIller(Iller instance);
    partial void UpdateIller(Iller instance);
    partial void DeleteIller(Iller instance);
    partial void InsertKullanici(Kullanici instance);
    partial void UpdateKullanici(Kullanici instance);
    partial void DeleteKullanici(Kullanici instance);
    partial void InsertMekan(Mekan instance);
    partial void UpdateMekan(Mekan instance);
    partial void DeleteMekan(Mekan instance);
    partial void InsertSporlar(Sporlar instance);
    partial void UpdateSporlar(Sporlar instance);
    partial void DeleteSporlar(Sporlar instance);
    #endregion
		
		public SporODataContext() : 
				base(global::DALLINQ.Properties.Settings.Default.SporOConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SporODataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SporODataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SporODataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SporODataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Etkinlik> Etkinliks
		{
			get
			{
				return this.GetTable<Etkinlik>();
			}
		}
		
		public System.Data.Linq.Table<EtkinlikTipi> EtkinlikTipis
		{
			get
			{
				return this.GetTable<EtkinlikTipi>();
			}
		}
		
		public System.Data.Linq.Table<HataLoglari> HataLoglaris
		{
			get
			{
				return this.GetTable<HataLoglari>();
			}
		}
		
		public System.Data.Linq.Table<Ilceler> Ilcelers
		{
			get
			{
				return this.GetTable<Ilceler>();
			}
		}
		
		public System.Data.Linq.Table<Iller> Illers
		{
			get
			{
				return this.GetTable<Iller>();
			}
		}
		
		public System.Data.Linq.Table<Katilanlar> Katilanlars
		{
			get
			{
				return this.GetTable<Katilanlar>();
			}
		}
		
		public System.Data.Linq.Table<Kullanici> Kullanicis
		{
			get
			{
				return this.GetTable<Kullanici>();
			}
		}
		
		public System.Data.Linq.Table<KullaniciSpor> KullaniciSpors
		{
			get
			{
				return this.GetTable<KullaniciSpor>();
			}
		}
		
		public System.Data.Linq.Table<Mekan> Mekans
		{
			get
			{
				return this.GetTable<Mekan>();
			}
		}
		
		public System.Data.Linq.Table<Sporlar> Sporlars
		{
			get
			{
				return this.GetTable<Sporlar>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsLoginUser")]
		public int IsLoginUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> kid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kid);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Etkinlik")]
	public partial class Etkinlik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EtkinlikId;
		
		private string _EtkinlikAdi;
		
		private int _TipId;
		
		private int _MekanID;
		
		private System.Nullable<System.DateTime> _EtkinlikTarihi;
		
		private System.Nullable<int> _Kontenjan;
		
		private int _isActive;
		
		private int _Sid;
		
		private EntityRef<EtkinlikTipi> _EtkinlikTipi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEtkinlikIdChanging(int value);
    partial void OnEtkinlikIdChanged();
    partial void OnEtkinlikAdiChanging(string value);
    partial void OnEtkinlikAdiChanged();
    partial void OnTipIdChanging(int value);
    partial void OnTipIdChanged();
    partial void OnMekanIDChanging(int value);
    partial void OnMekanIDChanged();
    partial void OnEtkinlikTarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnEtkinlikTarihiChanged();
    partial void OnKontenjanChanging(System.Nullable<int> value);
    partial void OnKontenjanChanged();
    partial void OnisActiveChanging(int value);
    partial void OnisActiveChanged();
    partial void OnSidChanging(int value);
    partial void OnSidChanged();
    #endregion
		
		public Etkinlik()
		{
			this._EtkinlikTipi = default(EntityRef<EtkinlikTipi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtkinlikId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EtkinlikId
		{
			get
			{
				return this._EtkinlikId;
			}
			set
			{
				if ((this._EtkinlikId != value))
				{
					this.OnEtkinlikIdChanging(value);
					this.SendPropertyChanging();
					this._EtkinlikId = value;
					this.SendPropertyChanged("EtkinlikId");
					this.OnEtkinlikIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtkinlikAdi", DbType="NVarChar(50)")]
		public string EtkinlikAdi
		{
			get
			{
				return this._EtkinlikAdi;
			}
			set
			{
				if ((this._EtkinlikAdi != value))
				{
					this.OnEtkinlikAdiChanging(value);
					this.SendPropertyChanging();
					this._EtkinlikAdi = value;
					this.SendPropertyChanged("EtkinlikAdi");
					this.OnEtkinlikAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipId", DbType="Int NOT NULL")]
		public int TipId
		{
			get
			{
				return this._TipId;
			}
			set
			{
				if ((this._TipId != value))
				{
					if (this._EtkinlikTipi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipIdChanging(value);
					this.SendPropertyChanging();
					this._TipId = value;
					this.SendPropertyChanged("TipId");
					this.OnTipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekanID", DbType="Int NOT NULL")]
		public int MekanID
		{
			get
			{
				return this._MekanID;
			}
			set
			{
				if ((this._MekanID != value))
				{
					this.OnMekanIDChanging(value);
					this.SendPropertyChanging();
					this._MekanID = value;
					this.SendPropertyChanged("MekanID");
					this.OnMekanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtkinlikTarihi", DbType="DateTime")]
		public System.Nullable<System.DateTime> EtkinlikTarihi
		{
			get
			{
				return this._EtkinlikTarihi;
			}
			set
			{
				if ((this._EtkinlikTarihi != value))
				{
					this.OnEtkinlikTarihiChanging(value);
					this.SendPropertyChanging();
					this._EtkinlikTarihi = value;
					this.SendPropertyChanged("EtkinlikTarihi");
					this.OnEtkinlikTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kontenjan", DbType="Int")]
		public System.Nullable<int> Kontenjan
		{
			get
			{
				return this._Kontenjan;
			}
			set
			{
				if ((this._Kontenjan != value))
				{
					this.OnKontenjanChanging(value);
					this.SendPropertyChanging();
					this._Kontenjan = value;
					this.SendPropertyChanged("Kontenjan");
					this.OnKontenjanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Int NOT NULL")]
		public int isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sid", DbType="Int NOT NULL")]
		public int Sid
		{
			get
			{
				return this._Sid;
			}
			set
			{
				if ((this._Sid != value))
				{
					this.OnSidChanging(value);
					this.SendPropertyChanging();
					this._Sid = value;
					this.SendPropertyChanged("Sid");
					this.OnSidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EtkinlikTipi_Etkinlik", Storage="_EtkinlikTipi", ThisKey="TipId", OtherKey="TipId", IsForeignKey=true)]
		public EtkinlikTipi EtkinlikTipi
		{
			get
			{
				return this._EtkinlikTipi.Entity;
			}
			set
			{
				EtkinlikTipi previousValue = this._EtkinlikTipi.Entity;
				if (((previousValue != value) 
							|| (this._EtkinlikTipi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EtkinlikTipi.Entity = null;
						previousValue.Etkinliks.Remove(this);
					}
					this._EtkinlikTipi.Entity = value;
					if ((value != null))
					{
						value.Etkinliks.Add(this);
						this._TipId = value.TipId;
					}
					else
					{
						this._TipId = default(int);
					}
					this.SendPropertyChanged("EtkinlikTipi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EtkinlikTipi")]
	public partial class EtkinlikTipi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipId;
		
		private string _Tip;
		
		private string _Aciklama;
		
		private EntitySet<Etkinlik> _Etkinliks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipIdChanging(int value);
    partial void OnTipIdChanged();
    partial void OnTipChanging(string value);
    partial void OnTipChanged();
    partial void OnAciklamaChanging(string value);
    partial void OnAciklamaChanged();
    #endregion
		
		public EtkinlikTipi()
		{
			this._Etkinliks = new EntitySet<Etkinlik>(new Action<Etkinlik>(this.attach_Etkinliks), new Action<Etkinlik>(this.detach_Etkinliks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TipId
		{
			get
			{
				return this._TipId;
			}
			set
			{
				if ((this._TipId != value))
				{
					this.OnTipIdChanging(value);
					this.SendPropertyChanging();
					this._TipId = value;
					this.SendPropertyChanged("TipId");
					this.OnTipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip", DbType="NVarChar(50)")]
		public string Tip
		{
			get
			{
				return this._Tip;
			}
			set
			{
				if ((this._Tip != value))
				{
					this.OnTipChanging(value);
					this.SendPropertyChanging();
					this._Tip = value;
					this.SendPropertyChanged("Tip");
					this.OnTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciklama", DbType="NVarChar(MAX)")]
		public string Aciklama
		{
			get
			{
				return this._Aciklama;
			}
			set
			{
				if ((this._Aciklama != value))
				{
					this.OnAciklamaChanging(value);
					this.SendPropertyChanging();
					this._Aciklama = value;
					this.SendPropertyChanged("Aciklama");
					this.OnAciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EtkinlikTipi_Etkinlik", Storage="_Etkinliks", ThisKey="TipId", OtherKey="TipId")]
		public EntitySet<Etkinlik> Etkinliks
		{
			get
			{
				return this._Etkinliks;
			}
			set
			{
				this._Etkinliks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Etkinliks(Etkinlik entity)
		{
			this.SendPropertyChanging();
			entity.EtkinlikTipi = this;
		}
		
		private void detach_Etkinliks(Etkinlik entity)
		{
			this.SendPropertyChanging();
			entity.EtkinlikTipi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HataLoglari")]
	public partial class HataLoglari : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DosyaAdi;
		
		private string _MethodAdi;
		
		private System.Nullable<int> _LineNumber;
		
		private System.Nullable<int> _ColumnNumber;
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _trh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDosyaAdiChanging(string value);
    partial void OnDosyaAdiChanged();
    partial void OnMethodAdiChanging(string value);
    partial void OnMethodAdiChanged();
    partial void OnLineNumberChanging(System.Nullable<int> value);
    partial void OnLineNumberChanged();
    partial void OnColumnNumberChanging(System.Nullable<int> value);
    partial void OnColumnNumberChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OntrhChanging(System.Nullable<System.DateTime> value);
    partial void OntrhChanged();
    #endregion
		
		public HataLoglari()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosyaAdi", DbType="NVarChar(MAX)")]
		public string DosyaAdi
		{
			get
			{
				return this._DosyaAdi;
			}
			set
			{
				if ((this._DosyaAdi != value))
				{
					this.OnDosyaAdiChanging(value);
					this.SendPropertyChanging();
					this._DosyaAdi = value;
					this.SendPropertyChanged("DosyaAdi");
					this.OnDosyaAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodAdi", DbType="VarChar(MAX)")]
		public string MethodAdi
		{
			get
			{
				return this._MethodAdi;
			}
			set
			{
				if ((this._MethodAdi != value))
				{
					this.OnMethodAdiChanging(value);
					this.SendPropertyChanging();
					this._MethodAdi = value;
					this.SendPropertyChanged("MethodAdi");
					this.OnMethodAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int")]
		public System.Nullable<int> LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnNumber", DbType="Int")]
		public System.Nullable<int> ColumnNumber
		{
			get
			{
				return this._ColumnNumber;
			}
			set
			{
				if ((this._ColumnNumber != value))
				{
					this.OnColumnNumberChanging(value);
					this.SendPropertyChanging();
					this._ColumnNumber = value;
					this.SendPropertyChanged("ColumnNumber");
					this.OnColumnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trh", DbType="DateTime")]
		public System.Nullable<System.DateTime> trh
		{
			get
			{
				return this._trh;
			}
			set
			{
				if ((this._trh != value))
				{
					this.OntrhChanging(value);
					this.SendPropertyChanging();
					this._trh = value;
					this.SendPropertyChanged("trh");
					this.OntrhChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ilceler")]
	public partial class Ilceler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ad;
		
		private int _Sehir;
		
		private EntitySet<Mekan> _Mekans;
		
		private EntityRef<Iller> _Iller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdChanging(string value);
    partial void OnAdChanged();
    partial void OnSehirChanging(int value);
    partial void OnSehirChanged();
    #endregion
		
		public Ilceler()
		{
			this._Mekans = new EntitySet<Mekan>(new Action<Mekan>(this.attach_Mekans), new Action<Mekan>(this.detach_Mekans));
			this._Iller = default(EntityRef<Iller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ad", DbType="NVarChar(255)")]
		public string Ad
		{
			get
			{
				return this._Ad;
			}
			set
			{
				if ((this._Ad != value))
				{
					this.OnAdChanging(value);
					this.SendPropertyChanging();
					this._Ad = value;
					this.SendPropertyChanged("Ad");
					this.OnAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sehir", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Sehir
		{
			get
			{
				return this._Sehir;
			}
			set
			{
				if ((this._Sehir != value))
				{
					if (this._Iller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSehirChanging(value);
					this.SendPropertyChanging();
					this._Sehir = value;
					this.SendPropertyChanged("Sehir");
					this.OnSehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ilceler_Mekan", Storage="_Mekans", ThisKey="Id", OtherKey="IlceId")]
		public EntitySet<Mekan> Mekans
		{
			get
			{
				return this._Mekans;
			}
			set
			{
				this._Mekans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Iller_Ilceler", Storage="_Iller", ThisKey="Sehir", OtherKey="Id", IsForeignKey=true)]
		public Iller Iller
		{
			get
			{
				return this._Iller.Entity;
			}
			set
			{
				Iller previousValue = this._Iller.Entity;
				if (((previousValue != value) 
							|| (this._Iller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Iller.Entity = null;
						previousValue.Ilcelers.Remove(this);
					}
					this._Iller.Entity = value;
					if ((value != null))
					{
						value.Ilcelers.Add(this);
						this._Sehir = value.Id;
					}
					else
					{
						this._Sehir = default(int);
					}
					this.SendPropertyChanged("Iller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mekans(Mekan entity)
		{
			this.SendPropertyChanging();
			entity.Ilceler = this;
		}
		
		private void detach_Mekans(Mekan entity)
		{
			this.SendPropertyChanging();
			entity.Ilceler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Iller")]
	public partial class Iller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Sehir;
		
		private EntitySet<Ilceler> _Ilcelers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSehirChanging(string value);
    partial void OnSehirChanged();
    #endregion
		
		public Iller()
		{
			this._Ilcelers = new EntitySet<Ilceler>(new Action<Ilceler>(this.attach_Ilcelers), new Action<Ilceler>(this.detach_Ilcelers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sehir", DbType="NVarChar(255)")]
		public string Sehir
		{
			get
			{
				return this._Sehir;
			}
			set
			{
				if ((this._Sehir != value))
				{
					this.OnSehirChanging(value);
					this.SendPropertyChanging();
					this._Sehir = value;
					this.SendPropertyChanged("Sehir");
					this.OnSehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Iller_Ilceler", Storage="_Ilcelers", ThisKey="Id", OtherKey="Sehir")]
		public EntitySet<Ilceler> Ilcelers
		{
			get
			{
				return this._Ilcelers;
			}
			set
			{
				this._Ilcelers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ilcelers(Ilceler entity)
		{
			this.SendPropertyChanging();
			entity.Iller = this;
		}
		
		private void detach_Ilcelers(Ilceler entity)
		{
			this.SendPropertyChanging();
			entity.Iller = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Katilanlar")]
	public partial class Katilanlar
	{
		
		private int _Eid;
		
		private int _Kid;
		
		public Katilanlar()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eid", DbType="Int NOT NULL")]
		public int Eid
		{
			get
			{
				return this._Eid;
			}
			set
			{
				if ((this._Eid != value))
				{
					this._Eid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid", DbType="Int NOT NULL")]
		public int Kid
		{
			get
			{
				return this._Kid;
			}
			set
			{
				if ((this._Kid != value))
				{
					this._Kid = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kullanici")]
	public partial class Kullanici : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Kid;
		
		private string _Ad;
		
		private string _Soyad;
		
		private string _Email;
		
		private string _Telefon;
		
		private string _Sifre;
		
		private string _Ilçe;
		
		private System.Nullable<System.DateTime> _DogumTarihi;
		
		private System.Nullable<int> _Cinsiyet;
		
		private int _isLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKidChanging(int value);
    partial void OnKidChanged();
    partial void OnAdChanging(string value);
    partial void OnAdChanged();
    partial void OnSoyadChanging(string value);
    partial void OnSoyadChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnSifreChanging(string value);
    partial void OnSifreChanged();
    partial void OnIlçeChanging(string value);
    partial void OnIlçeChanged();
    partial void OnDogumTarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnDogumTarihiChanged();
    partial void OnCinsiyetChanging(System.Nullable<int> value);
    partial void OnCinsiyetChanged();
    partial void OnisLoginChanging(int value);
    partial void OnisLoginChanged();
    #endregion
		
		public Kullanici()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Kid
		{
			get
			{
				return this._Kid;
			}
			set
			{
				if ((this._Kid != value))
				{
					this.OnKidChanging(value);
					this.SendPropertyChanging();
					this._Kid = value;
					this.SendPropertyChanged("Kid");
					this.OnKidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ad", DbType="NVarChar(50)")]
		public string Ad
		{
			get
			{
				return this._Ad;
			}
			set
			{
				if ((this._Ad != value))
				{
					this.OnAdChanging(value);
					this.SendPropertyChanging();
					this._Ad = value;
					this.SendPropertyChanged("Ad");
					this.OnAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soyad", DbType="NVarChar(50)")]
		public string Soyad
		{
			get
			{
				return this._Soyad;
			}
			set
			{
				if ((this._Soyad != value))
				{
					this.OnSoyadChanging(value);
					this.SendPropertyChanging();
					this._Soyad = value;
					this.SendPropertyChanged("Soyad");
					this.OnSoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NVarChar(50)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sifre", DbType="Char(10)")]
		public string Sifre
		{
			get
			{
				return this._Sifre;
			}
			set
			{
				if ((this._Sifre != value))
				{
					this.OnSifreChanging(value);
					this.SendPropertyChanging();
					this._Sifre = value;
					this.SendPropertyChanged("Sifre");
					this.OnSifreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilçe", DbType="NVarChar(50)")]
		public string Ilçe
		{
			get
			{
				return this._Ilçe;
			}
			set
			{
				if ((this._Ilçe != value))
				{
					this.OnIlçeChanging(value);
					this.SendPropertyChanging();
					this._Ilçe = value;
					this.SendPropertyChanged("Ilçe");
					this.OnIlçeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DogumTarihi", DbType="DateTime")]
		public System.Nullable<System.DateTime> DogumTarihi
		{
			get
			{
				return this._DogumTarihi;
			}
			set
			{
				if ((this._DogumTarihi != value))
				{
					this.OnDogumTarihiChanging(value);
					this.SendPropertyChanging();
					this._DogumTarihi = value;
					this.SendPropertyChanged("DogumTarihi");
					this.OnDogumTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cinsiyet", DbType="Int")]
		public System.Nullable<int> Cinsiyet
		{
			get
			{
				return this._Cinsiyet;
			}
			set
			{
				if ((this._Cinsiyet != value))
				{
					this.OnCinsiyetChanging(value);
					this.SendPropertyChanging();
					this._Cinsiyet = value;
					this.SendPropertyChanged("Cinsiyet");
					this.OnCinsiyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLogin", DbType="Int NOT NULL")]
		public int isLogin
		{
			get
			{
				return this._isLogin;
			}
			set
			{
				if ((this._isLogin != value))
				{
					this.OnisLoginChanging(value);
					this.SendPropertyChanging();
					this._isLogin = value;
					this.SendPropertyChanged("isLogin");
					this.OnisLoginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KullaniciSpor")]
	public partial class KullaniciSpor
	{
		
		private System.Nullable<int> _Kid;
		
		private System.Nullable<int> _Sid;
		
		public KullaniciSpor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kid", DbType="Int")]
		public System.Nullable<int> Kid
		{
			get
			{
				return this._Kid;
			}
			set
			{
				if ((this._Kid != value))
				{
					this._Kid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sid", DbType="Int")]
		public System.Nullable<int> Sid
		{
			get
			{
				return this._Sid;
			}
			set
			{
				if ((this._Sid != value))
				{
					this._Sid = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mekan")]
	public partial class Mekan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mid;
		
		private string _MekanAdi;
		
		private System.Nullable<int> _IlceId;
		
		private EntityRef<Ilceler> _Ilceler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMidChanging(int value);
    partial void OnMidChanged();
    partial void OnMekanAdiChanging(string value);
    partial void OnMekanAdiChanged();
    partial void OnIlceIdChanging(System.Nullable<int> value);
    partial void OnIlceIdChanged();
    #endregion
		
		public Mekan()
		{
			this._Ilceler = default(EntityRef<Ilceler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mid
		{
			get
			{
				return this._Mid;
			}
			set
			{
				if ((this._Mid != value))
				{
					this.OnMidChanging(value);
					this.SendPropertyChanging();
					this._Mid = value;
					this.SendPropertyChanged("Mid");
					this.OnMidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekanAdi", DbType="NVarChar(50)")]
		public string MekanAdi
		{
			get
			{
				return this._MekanAdi;
			}
			set
			{
				if ((this._MekanAdi != value))
				{
					this.OnMekanAdiChanging(value);
					this.SendPropertyChanging();
					this._MekanAdi = value;
					this.SendPropertyChanged("MekanAdi");
					this.OnMekanAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IlceId", DbType="Int")]
		public System.Nullable<int> IlceId
		{
			get
			{
				return this._IlceId;
			}
			set
			{
				if ((this._IlceId != value))
				{
					if (this._Ilceler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIlceIdChanging(value);
					this.SendPropertyChanging();
					this._IlceId = value;
					this.SendPropertyChanged("IlceId");
					this.OnIlceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ilceler_Mekan", Storage="_Ilceler", ThisKey="IlceId", OtherKey="Id", IsForeignKey=true)]
		public Ilceler Ilceler
		{
			get
			{
				return this._Ilceler.Entity;
			}
			set
			{
				Ilceler previousValue = this._Ilceler.Entity;
				if (((previousValue != value) 
							|| (this._Ilceler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ilceler.Entity = null;
						previousValue.Mekans.Remove(this);
					}
					this._Ilceler.Entity = value;
					if ((value != null))
					{
						value.Mekans.Add(this);
						this._IlceId = value.Id;
					}
					else
					{
						this._IlceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ilceler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sporlar")]
	public partial class Sporlar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SporId;
		
		private string _SporAdi;
		
		private System.Nullable<int> _SporcuSayisi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSporIdChanging(int value);
    partial void OnSporIdChanged();
    partial void OnSporAdiChanging(string value);
    partial void OnSporAdiChanged();
    partial void OnSporcuSayisiChanging(System.Nullable<int> value);
    partial void OnSporcuSayisiChanged();
    #endregion
		
		public Sporlar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SporId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SporId
		{
			get
			{
				return this._SporId;
			}
			set
			{
				if ((this._SporId != value))
				{
					this.OnSporIdChanging(value);
					this.SendPropertyChanging();
					this._SporId = value;
					this.SendPropertyChanged("SporId");
					this.OnSporIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SporAdi", DbType="NVarChar(50)")]
		public string SporAdi
		{
			get
			{
				return this._SporAdi;
			}
			set
			{
				if ((this._SporAdi != value))
				{
					this.OnSporAdiChanging(value);
					this.SendPropertyChanging();
					this._SporAdi = value;
					this.SendPropertyChanged("SporAdi");
					this.OnSporAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SporcuSayisi", DbType="Int")]
		public System.Nullable<int> SporcuSayisi
		{
			get
			{
				return this._SporcuSayisi;
			}
			set
			{
				if ((this._SporcuSayisi != value))
				{
					this.OnSporcuSayisiChanging(value);
					this.SendPropertyChanging();
					this._SporcuSayisi = value;
					this.SendPropertyChanged("SporcuSayisi");
					this.OnSporcuSayisiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
